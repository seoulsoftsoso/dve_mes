# Generated by Django 3.0.6 on 2024-03-12 11:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.CharField(max_length=32, unique=True, verbose_name='유저 ID')),
                ('code', models.CharField(max_length=8, null=True, verbose_name='사번')),
                ('username', models.CharField(max_length=26, null=True, verbose_name='유저 이름')),
                ('employment_date', models.DateField(null=True, verbose_name='입사일자')),
                ('postal_code', models.CharField(max_length=12, null=True, verbose_name='우편번호')),
                ('address', models.CharField(max_length=64, null=True, verbose_name='주소')),
                ('etc', models.CharField(max_length=36, null=True, verbose_name='기타')),
                ('email', models.CharField(max_length=36, null=True, verbose_name='이메일')),
                ('tel', models.CharField(max_length=36, null=True, verbose_name='전화번호')),
                ('is_master', models.BooleanField(default=False, verbose_name='마스터 아이디')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='최초작성일')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_created_by', to=settings.AUTH_USER_MODEL, verbose_name='최초작성자')),
            ],
        ),
        migrations.CreateModel(
            name='EnterpriseMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, unique=True, verbose_name='업체코드')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='업체명')),
                ('manage', models.CharField(max_length=20, null=True, verbose_name='관리명')),
                ('permissions', models.CharField(max_length=100, verbose_name='권한')),
            ],
            options={
                'unique_together': {('code', 'name')},
            },
        ),
        migrations.CreateModel(
            name='GroupCodeMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='그룹코드')),
                ('name', models.CharField(max_length=16, verbose_name='그룹코드 이름')),
                ('enable', models.BooleanField(default=True, verbose_name='사용구분')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='최초작성일')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='최종작성일')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_code_master_created_by', to=settings.AUTH_USER_MODEL, verbose_name='최초작성자')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='group_code_master_enterprise', to='api.EnterpriseMaster', verbose_name='업체')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_code_master_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='최종작성자')),
            ],
            options={
                'unique_together': {('enterprise', 'code')},
            },
        ),
        migrations.CreateModel(
            name='CodeMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='상세 코드')),
                ('name', models.CharField(max_length=16, verbose_name='상세 코드명')),
                ('explain', models.CharField(max_length=32, null=True, verbose_name='코드설명')),
                ('enable', models.BooleanField(default=True, verbose_name='사용구분')),
                ('etc', models.CharField(max_length=64, null=True, verbose_name='기타')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='최초작성일')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='최종작성일')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='code_master_created_by', to=settings.AUTH_USER_MODEL, verbose_name='최초작성자')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='code_master_enterprise', to='api.EnterpriseMaster', verbose_name='업체')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='codemaster_group', to='api.GroupCodeMaster', verbose_name='그룹 코드')),
                ('ref_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='codemaster_ref_detail_code', to='api.CodeMaster', verbose_name='참조 상세코드')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='code_master_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='최종작성자')),
            ],
            options={
                'unique_together': {('enterprise', 'group', 'code')},
            },
        ),
        migrations.AddField(
            model_name='usermaster',
            name='department_position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='department_position', to='api.CodeMaster', verbose_name='부서구분'),
        ),
        migrations.AddField(
            model_name='usermaster',
            name='employment_division',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employment_division', to='api.CodeMaster', verbose_name='고용구분'),
        ),
        migrations.AddField(
            model_name='usermaster',
            name='enterprise',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='user_master_enterprise', to='api.EnterpriseMaster', verbose_name='업체'),
        ),
        migrations.AddField(
            model_name='usermaster',
            name='factory_classification',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='factory_classification', to='api.CodeMaster', verbose_name='공장구분'),
        ),
        migrations.AddField(
            model_name='usermaster',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='usermaster',
            name='job_position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='job_position', to='api.CodeMaster', verbose_name='직위'),
        ),
        migrations.AddField(
            model_name='usermaster',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='usermaster',
            unique_together={('enterprise', 'code')},
        ),
    ]
